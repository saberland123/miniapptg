// –ñ–¥–µ–º, –ø–æ–∫–∞ –≤–µ—Å—å HTML –∏ CSS –∑–∞–≥—Ä—É–∑—è—Ç—Å—è
document.addEventListener('DOMContentLoaded', () => {
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç API Telegram
    const tg = window.Telegram.WebApp;
    tg.expand(); // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω

    // ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏–ª–∏ –Ω–∞ –≤–∞—à —Ç—É–Ω–Ω–µ–ª—å serveo.net
    const BACKEND_URL = 'https://a06ad93ccdde5fcddf7a424f8637a937.serveo.net';

    // –î–∞–Ω–Ω—ã–µ —Ç–µ–ø–µ—Ä—å –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å –±—ç–∫–µ–Ω–¥–∞, –∞ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∑–¥–µ—Å—å
    let appData = {
        plan: [],
        profile: {} // –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –ø—É—Å—Ç—ã–º
    };
    let currentEditingDayIndex = null;
    const dayNames = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"];

    // --- –ü–û–õ–£–ß–ï–ù–ò–ï –≠–õ–ï–ú–ï–ù–¢–û–í –°–¢–†–ê–ù–ò–¶–´ ---
    const screens = document.querySelectorAll('.screen');
    const modal = document.getElementById('day-modal');
    
    // --- –õ–û–ì–ò–ö–ê –ù–ê–í–ò–ì–ê–¶–ò–ò (–ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –≠–ö–†–ê–ù–û–í) ---
    function showScreen(screenId) {
        screens.forEach(screen => {
            screen.classList.remove('active');
        });
        document.getElementById(screenId).classList.add('active');
    }

    // –ù–∞–≤–µ—à–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    document.getElementById('menu-plan-btn').addEventListener('click', () => {
        renderWeekPlan();
        showScreen('plan-screen');
    });
    document.getElementById('menu-profile-btn').addEventListener('click', () => {
        renderProfile();
        showScreen('profile-screen');
    });
    document.querySelectorAll('.back-button').forEach(button => {
        button.addEventListener('click', () => showScreen('home-screen'));
    });

    // --- –õ–û–ì–ò–ö–ê –†–ï–ù–î–ï–†–ò–ù–ì–ê (–û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –î–ê–ù–ù–´–•) ---
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –ø–ª–∞–Ω–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é
    function renderWeekPlan() {
        const container = document.getElementById('week-plan-container');
        container.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π —Å–ø–∏—Å–æ–∫
        appData.plan.forEach((dayData, index) => {
            const dayCard = document.createElement('div');
            dayCard.className = 'day-card';
            if (dayData.isRestDay) {
                dayCard.classList.add('rest-day');
            }
            
            const exerciseCountText = dayData.isRestDay 
                ? 'üèñÔ∏è –í—ã—Ö–æ–¥–Ω–æ–π' 
                : `${dayData.exercises.length} —É–ø—Ä.`;

            dayCard.innerHTML = `
                <span class="day-name">${dayNames[index]}</span>
                <span class="exercise-count">${exerciseCountText}</span>
            `;
            
            // –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –¥–µ–Ω—å –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            dayCard.addEventListener('click', () => {
                openDayModal(index);
            });
            
            container.appendChild(dayCard);
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
    function renderProfile() {
        if (appData.profile) {
            document.getElementById('stat-days').textContent = appData.profile.completedDays || 0;
            document.getElementById('stat-weeks').textContent = appData.profile.completedWeeks || 0;
            document.getElementById('stat-progress').textContent = appData.profile.progress || "0/0";
        }
    }

    // --- –õ–û–ì–ò–ö–ê –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê ---

    function openDayModal(dayIndex) {
        currentEditingDayIndex = dayIndex;
        const dayData = appData.plan[dayIndex];

        document.getElementById('modal-day-title').textContent = `–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ ${dayNames[dayIndex]}`;
        
        // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
        renderExercisesList(dayData.exercises);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–ª–∏ —Å–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –≤—ã—Ö–æ–¥–Ω–æ–π –ª–∏ –¥–µ–Ω—å
        const form = document.getElementById('add-exercise-form');
        form.style.display = dayData.isRestDay ? 'none' : 'flex';

        modal.style.display = 'flex';
    }

    function closeDayModal() {
        modal.style.display = 'none';
        currentEditingDayIndex = null;
    }

    function renderExercisesList(exercises) {
        const listContainer = document.getElementById('exercises-list');
        listContainer.innerHTML = '';
        if (exercises.length === 0) {
            listContainer.innerHTML = '<p style="color: var(--secondary-text-color);">–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.</p>';
            return;
        }

        exercises.forEach((ex, index) => {
            const item = document.createElement('div');
            item.className = 'exercise-item';
            item.innerHTML = `
                <span>${ex.name} (${ex.sets}x${ex.reps})</span>
                <button class="delete-btn" data-index="${index}">‚ùå</button>
            `;
            listContainer.appendChild(item);
        });
    }

    // --- –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° API ---

    async function loadPlan() {
        try {
            tg.MainButton.showProgress(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä—É—Ç–∏–ª–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
            const response = await fetch(`${BACKEND_URL}/api/plan`, {
                method: 'GET',
                headers: {
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
                    'Authorization': `tma ${tg.initData}`
                }
            });
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–ª–∞–Ω–∞: ' + await response.text());
            }
            const planFromServer = await response.json();
            appData.plan = planFromServer;
            renderWeekPlan();
        } catch (error) {
            console.error(error);
            tg.showAlert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—à –ø–ª–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            appData.plan = dayNames.map(day => ({ 
                day, 
                exercises: [], 
                isRestDay: false 
            }));
            renderWeekPlan();
        } finally {
            tg.MainButton.hideProgress();
        }
    }

    async function savePlan() {
        try {
            tg.MainButton.showProgress();
            const response = await fetch(`${BACKEND_URL}/api/plan`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `tma ${tg.initData}`
                },
                body: JSON.stringify({ plan: appData.plan })
            });
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–ª–∞–Ω–∞: ' + await response.text());
            }
            tg.HapticFeedback.notificationOccurred('success');
            console.log('–ü–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
        } catch (error) {
            console.error(error);
            tg.showAlert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–ª–∞–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
        } finally {
            tg.MainButton.hideProgress();
        }
    }

    // --- –û–ë–†–ê–ë–û–¢–ö–ê –°–û–ë–´–¢–ò–ô –§–û–†–ú –ò –ö–ù–û–ü–û–ö ---

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.getElementById('modal-close-btn').addEventListener('click', closeDayModal);

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    document.getElementById('add-exercise-form').addEventListener('submit', (e) => {
        e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        
        const name = document.getElementById('ex-name').value;
        const sets = document.getElementById('ex-sets').value;
        const reps = document.getElementById('ex-reps').value;

        if (name && sets && reps && currentEditingDayIndex !== null) {
            appData.plan[currentEditingDayIndex].exercises.push({ name, sets, reps });
            
            // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –≤ –º–æ–¥–∞–ª–∫–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
            renderExercisesList(appData.plan[currentEditingDayIndex].exercises);
            renderWeekPlan();

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            savePlan();

            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            e.target.reset();
            tg.HapticFeedback.impactOccurred('light'); // –õ–µ–≥–∫–∞—è –≤–∏–±—Ä–∞—Ü–∏—è
        }
    });

    // –£–¥–∞–ª–µ–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è (–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π)
    document.getElementById('exercises-list').addEventListener('click', (e) => {
        if (e.target && e.target.classList.contains('delete-btn')) {
            const exerciseIndex = parseInt(e.target.getAttribute('data-index'));
            if (currentEditingDayIndex !== null && !isNaN(exerciseIndex)) {
                appData.plan[currentEditingDayIndex].exercises.splice(exerciseIndex, 1);
                
                renderExercisesList(appData.plan[currentEditingDayIndex].exercises);
                renderWeekPlan();
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                savePlan();
                
                tg.HapticFeedback.notificationOccurred('warning'); // –í–∏–±—Ä–∞—Ü–∏—è-–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            }
        }
    });

    // --- –ù–ê–ß–ê–õ–¨–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É Telegram
    tg.MainButton.setText('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –∑–∞–∫—Ä—ã—Ç—å');
    tg.onEvent('mainButtonClicked', () => {
        savePlan().then(() => {
            tg.close();
        });
    });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (tg.initDataUnsafe && tg.initDataUnsafe.user) {
        document.getElementById('user-name').textContent = tg.initDataUnsafe.user.first_name;
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    loadPlan().then(() => {
        showScreen('home-screen');
        tg.MainButton.show(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    showScreen('home-screen');
});